<?xml version="1.0" encoding="UTF-8"?>
<project name="module_extensions" default="compile.module.extensions">
  <dirname property="module.extensions.basedir" file="${ant.file.module_extensions}"/>
  
  <property name="module.jdk.home.extensions" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.extensions" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.extensions" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.extensions" value="${compiler.args}"/>
  
  <property name="extensions.output.dir" value="${module.extensions.basedir}/bin"/>
  <property name="extensions.testoutput.dir" value="${module.extensions.basedir}/bin"/>
  
  <path id="extensions.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="extensions.module.production.classpath">
    <path refid="${module.jdk.classpath.extensions}"/>
    <pathelement location="${idea.home}/lib/junit.jar"/>
  </path>
  
  <path id="extensions.runtime.production.module.classpath">
    <pathelement location="${extensions.output.dir}"/>
    <pathelement location="${idea.home}/lib/junit.jar"/>
  </path>
  
  <path id="extensions.module.classpath">
    <pathelement location="${extensions.output.dir}"/>
    <path refid="${module.jdk.classpath.extensions}"/>
    <pathelement location="${idea.home}/lib/junit.jar"/>
  </path>
  
  <path id="extensions.runtime.module.classpath">
    <pathelement location="${extensions.output.dir}"/>
    <pathelement location="${idea.home}/lib/junit.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.extensions">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.extensions">
    <patternset refid="excluded.from.module.extensions"/>
  </patternset>
  
  <path id="extensions.module.sourcepath">
    <dirset dir="${module.extensions.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="extensions.module.test.sourcepath">
    <dirset dir="${module.extensions.basedir}">
      <include name="tst"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.extensions" depends="compile.module.extensions.production,compile.module.extensions.tests" description="Compile module Extensions"/>
  
  <target name="compile.module.extensions.production" description="Compile module Extensions; production classes">
    <mkdir dir="${extensions.output.dir}"/>
    <javac destdir="${extensions.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.extensions}/javac">
      <compilerarg line="${compiler.args.extensions}"/>
      <bootclasspath refid="extensions.module.bootclasspath"/>
      <classpath refid="extensions.module.production.classpath"/>
      <src refid="extensions.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.extensions"/>
    </javac>
    
    <copy todir="${extensions.output.dir}">
      <fileset dir="${module.extensions.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.extensions.tests" depends="compile.module.extensions.production" description="compile module Extensions; test classes" unless="skip.tests">
    <mkdir dir="${extensions.testoutput.dir}"/>
    <javac destdir="${extensions.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.extensions}/javac">
      <compilerarg line="${compiler.args.extensions}"/>
      <bootclasspath refid="extensions.module.bootclasspath"/>
      <classpath refid="extensions.module.classpath"/>
      <src refid="extensions.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.extensions"/>
    </javac>
    
    <copy todir="${extensions.testoutput.dir}">
      <fileset dir="${module.extensions.basedir}/tst">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.extensions" description="cleanup module">
    <delete dir="${extensions.output.dir}"/>
    <delete dir="${extensions.testoutput.dir}"/>
  </target>
</project>